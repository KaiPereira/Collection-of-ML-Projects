{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM2v282FhxcLW02xIAmrxHe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"BvRmHbp3USGl","executionInfo":{"status":"ok","timestamp":1674590468267,"user_tz":480,"elapsed":9099,"user":{"displayName":"Kai Pereira","userId":"04104391952422788123"}},"outputId":"7f54341c-224b-4848-8af8-a51844f0d343"},"outputs":[{"output_type":"stream","name":"stdout","text":["ACCURACY: 47898.1303717647\n","PREDICTION: [125843.   133123.   121208.   ... 169210.   248680.01 189236.01]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import pandas as pd\n","import tensorflow as tf\n","from sklearn import datasets\n","import itertools\n","from sklearn import model_selection\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_absolute_error\n","import matplotlib.pyplot as plt\n","\n","\n","\n","# Import our datasets\n","test = pd.read_csv(\"/content/sample_data/california_housing_test.csv\")\n","train = pd.read_csv(\"/content/sample_data/california_housing_train.csv\")\n","\n","\n","# Grab our objective\n","objective_var = [\"median_house_value\"]\n","objective = train[objective_var]\n","\n","\n","# Grab our training\n","training_vars = [\"housing_median_age\", \"total_rooms\", \"total_bedrooms\", \"population\", \"households\", \"median_income\"]\n","training = train[training_vars]\n","\n","\n","# Grab our testing\n","testing = test[training_vars]\n","\n","\n","# Split our data\n","train_x, test_x, train_y, test_y = model_selection.train_test_split(training, objective)\n","\n","\n","# Our model\n","# Declare which model\n","model = RandomForestRegressor()\n","\n","# Fit our model\n","model.fit(train_x, train_y.values.ravel())\n","\n","# Predict using our model\n","prediction = model.predict(test_x)\n","\n","\n","# Get out accuracy\n","accuracy = mean_absolute_error(prediction, test_y)\n","print(\"ACCURACY: {}\".format(accuracy))\n","\n","\n","# Grab our prediction results\n","print(\"PREDICTION: {}\".format(prediction))\n","\n","\n","# Plot our results\n","plt.scatter(prediction, test_y)\n","plt.show()\n","\n"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","\n","# Grab our dataset\n","url = 'http://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data'\n","column_names = ['MPG', 'Cylinders', 'Displacement', 'Horsepower', 'Weight',\n","                'Acceleration', 'Model Year', 'Origin']\n","\n","\n","# Read our dataset\n","# We have to set the column names because the dataset is just numbers\n","# We turn all ? into NAN values because all NAN values are ?\n","# Split's items into different categories that are separated by a string\n","# skipinitialspace removes random spaces that mess up our data\n","raw_dataset = pd.read_csv(url, names=column_names, na_values='?',\n","                          sep=' ', skipinitialspace=True)\n","\n","# Drop NAN values\n","dataset = raw_dataset.copy()\n","dataset = dataset.dropna()\n","\n","# Convert Categorical into Numerical\n","dataset = pd.get_dummies(dataset)\n","\n","# Sample only 80% of our data for training\n","train_dataset = dataset.sample(frac=0.8, random_state=0)\n","# Our test data should include the same amount of data as our training\n","test_dataset = dataset.drop(train_dataset.index)\n","\n","# Copy the data to prevent overwright of our actual dataset\n","train_features = train_dataset.copy()\n","test_features = test_dataset.copy()\n","\n","# Pop out our variable we're predicting for\n","train_labels = train_features.pop('MPG')\n","test_labels = test_features.pop('MPG')\n","\n","# Turn our horsepower into an array instead of a dataframe\n","horsepower = np.array(train_features['Horsepower'])\n","\n","# Normalize our data to make it predict better\n","horsepower_normalizer = layers.Normalization(input_shape=[1,], axis=None)\n","# Adapt our horsepower to our normal data so it basically merges\n","horsepower_normalizer.adapt(horsepower)\n","\n","\n","# Create our model\n","horsepower_model = tf.keras.Sequential([\n","    horsepower_normalizer,\n","    layers.Dense(units=1)\n","])\n","# Compile our model to make the data readable\n","horsepower_model.compile(\n","    optimizer=tf.keras.optimizers.Adam(learning_rate=0.1),\n","    loss='mean_absolute_error')\n","\n","# Fit our model with our data\n","history = horsepower_model.fit(\n","    train_features['Horsepower'],\n","    train_labels,\n","    epochs=100,\n","    # Suppress logging.\n","    verbose=0,\n","    # Calculate validation results on 20% of the training data.\n","    validation_split = 0.2)\n","\n","\n","# See our loss \n","def plot_loss(history):\n","  plt.plot(history.history['loss'], label='loss')\n","  plt.plot(history.history['val_loss'], label='val_loss')\n","  plt.ylim([0, 10])\n","  plt.xlabel('Epoch')\n","  plt.ylabel('Error [MPG]')\n","  plt.legend()\n","  plt.grid(True)\n","\n","plot_loss(history)\n","\n","\n","# FINALLY PREDICT USING THE MODEL\n","x = tf.linspace(0.0, 250, 251)\n","prediction = horsepower_model.predict(x)\n","\n","print(prediction)"],"metadata":{"id":"X0-IZTwDYCs9","executionInfo":{"status":"ok","timestamp":1674758717079,"user_tz":480,"elapsed":4667,"user":{"displayName":"Kai Pereira","userId":"04104391952422788123"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"92a524f0-47d2-456a-b480-f5523a04ec5b"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["8/8 [==============================] - 0s 2ms/step\n","[[  112.447]\n"," [  107.682]\n"," [  102.917]\n"," [   98.152]\n"," [   93.386]\n"," [   88.621]\n"," [   83.856]\n"," [   79.09 ]\n"," [   74.325]\n"," [   69.56 ]\n"," [   64.795]\n"," [   60.029]\n"," [   55.264]\n"," [   50.499]\n"," [   45.734]\n"," [   40.968]\n"," [   36.203]\n"," [   31.438]\n"," [   26.673]\n"," [   21.907]\n"," [   17.142]\n"," [   12.377]\n"," [    7.612]\n"," [    2.846]\n"," [   -1.919]\n"," [   -6.684]\n"," [  -11.45 ]\n"," [  -16.215]\n"," [  -20.98 ]\n"," [  -25.745]\n"," [  -30.511]\n"," [  -35.276]\n"," [  -40.041]\n"," [  -44.806]\n"," [  -49.572]\n"," [  -54.337]\n"," [  -59.102]\n"," [  -63.867]\n"," [  -68.633]\n"," [  -73.398]\n"," [  -78.163]\n"," [  -82.928]\n"," [  -87.694]\n"," [  -92.459]\n"," [  -97.224]\n"," [ -101.99 ]\n"," [ -106.755]\n"," [ -111.52 ]\n"," [ -116.285]\n"," [ -121.051]\n"," [ -125.816]\n"," [ -130.581]\n"," [ -135.346]\n"," [ -140.112]\n"," [ -144.877]\n"," [ -149.642]\n"," [ -154.407]\n"," [ -159.173]\n"," [ -163.938]\n"," [ -168.703]\n"," [ -173.468]\n"," [ -178.234]\n"," [ -182.999]\n"," [ -187.764]\n"," [ -192.53 ]\n"," [ -197.295]\n"," [ -202.06 ]\n"," [ -206.825]\n"," [ -211.591]\n"," [ -216.356]\n"," [ -221.121]\n"," [ -225.886]\n"," [ -230.652]\n"," [ -235.417]\n"," [ -240.182]\n"," [ -244.947]\n"," [ -249.713]\n"," [ -254.478]\n"," [ -259.243]\n"," [ -264.008]\n"," [ -268.774]\n"," [ -273.539]\n"," [ -278.304]\n"," [ -283.07 ]\n"," [ -287.835]\n"," [ -292.6  ]\n"," [ -297.365]\n"," [ -302.131]\n"," [ -306.896]\n"," [ -311.661]\n"," [ -316.426]\n"," [ -321.192]\n"," [ -325.957]\n"," [ -330.722]\n"," [ -335.487]\n"," [ -340.253]\n"," [ -345.018]\n"," [ -349.783]\n"," [ -354.548]\n"," [ -359.314]\n"," [ -364.079]\n"," [ -368.844]\n"," [ -373.61 ]\n"," [ -378.375]\n"," [ -383.14 ]\n"," [ -387.905]\n"," [ -392.671]\n"," [ -397.436]\n"," [ -402.201]\n"," [ -406.966]\n"," [ -411.732]\n"," [ -416.497]\n"," [ -421.262]\n"," [ -426.027]\n"," [ -430.793]\n"," [ -435.558]\n"," [ -440.323]\n"," [ -445.088]\n"," [ -449.854]\n"," [ -454.619]\n"," [ -459.384]\n"," [ -464.15 ]\n"," [ -468.915]\n"," [ -473.68 ]\n"," [ -478.445]\n"," [ -483.211]\n"," [ -487.976]\n"," [ -492.741]\n"," [ -497.506]\n"," [ -502.272]\n"," [ -507.037]\n"," [ -511.802]\n"," [ -516.567]\n"," [ -521.333]\n"," [ -526.098]\n"," [ -530.863]\n"," [ -535.629]\n"," [ -540.394]\n"," [ -545.159]\n"," [ -549.924]\n"," [ -554.69 ]\n"," [ -559.455]\n"," [ -564.22 ]\n"," [ -568.985]\n"," [ -573.751]\n"," [ -578.516]\n"," [ -583.281]\n"," [ -588.046]\n"," [ -592.812]\n"," [ -597.577]\n"," [ -602.342]\n"," [ -607.107]\n"," [ -611.873]\n"," [ -616.638]\n"," [ -621.403]\n"," [ -626.168]\n"," [ -630.934]\n"," [ -635.699]\n"," [ -640.464]\n"," [ -645.229]\n"," [ -649.995]\n"," [ -654.76 ]\n"," [ -659.525]\n"," [ -664.291]\n"," [ -669.056]\n"," [ -673.821]\n"," [ -678.586]\n"," [ -683.352]\n"," [ -688.117]\n"," [ -692.882]\n"," [ -697.647]\n"," [ -702.413]\n"," [ -707.178]\n"," [ -711.943]\n"," [ -716.708]\n"," [ -721.474]\n"," [ -726.239]\n"," [ -731.004]\n"," [ -735.77 ]\n"," [ -740.535]\n"," [ -745.3  ]\n"," [ -750.065]\n"," [ -754.831]\n"," [ -759.596]\n"," [ -764.361]\n"," [ -769.126]\n"," [ -773.892]\n"," [ -778.657]\n"," [ -783.422]\n"," [ -788.187]\n"," [ -792.953]\n"," [ -797.718]\n"," [ -802.483]\n"," [ -807.248]\n"," [ -812.014]\n"," [ -816.779]\n"," [ -821.544]\n"," [ -826.31 ]\n"," [ -831.075]\n"," [ -835.84 ]\n"," [ -840.605]\n"," [ -845.371]\n"," [ -850.136]\n"," [ -854.901]\n"," [ -859.666]\n"," [ -864.432]\n"," [ -869.197]\n"," [ -873.962]\n"," [ -878.727]\n"," [ -883.493]\n"," [ -888.258]\n"," [ -893.023]\n"," [ -897.789]\n"," [ -902.554]\n"," [ -907.319]\n"," [ -912.084]\n"," [ -916.849]\n"," [ -921.615]\n"," [ -926.38 ]\n"," [ -931.145]\n"," [ -935.911]\n"," [ -940.676]\n"," [ -945.441]\n"," [ -950.206]\n"," [ -954.972]\n"," [ -959.737]\n"," [ -964.502]\n"," [ -969.267]\n"," [ -974.033]\n"," [ -978.798]\n"," [ -983.563]\n"," [ -988.329]\n"," [ -993.094]\n"," [ -997.859]\n"," [-1002.624]\n"," [-1007.39 ]\n"," [-1012.155]\n"," [-1016.92 ]\n"," [-1021.685]\n"," [-1026.45 ]\n"," [-1031.216]\n"," [-1035.981]\n"," [-1040.746]\n"," [-1045.512]\n"," [-1050.277]\n"," [-1055.042]\n"," [-1059.807]\n"," [-1064.573]\n"," [-1069.338]\n"," [-1074.103]\n"," [-1078.868]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAX4AAAEKCAYAAAAVaT4rAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAWoElEQVR4nO3df7TVdZ3v8edbIMAARa2DChO4MlkKV41jY3Ul0W6WUzrpFJpj6C3pmqNojkW/ncayK7Ps1h2XLsefdUkg9Tbe6uo0CpH3ekkgFBXDxlE6iPKj/EHFgPC+f+yNcwTO2efX3ptzPs/HWnud/f2xv5/Pmy/rdb7ns7/7syMzkSSVY59md0CS1FgGvyQVxuCXpMIY/JJUGINfkgpj8EtSYeoW/BFxS0Ssj4jH2q07ICJ+GhFPVX+Orlf7kqQ9q+cV/23A+3dZNxu4PzMPB+6vLkuSGijq+QGuiBgP/CgzJ1WXfwWcmJnrIuJgYFFmHlG3DkiSdjO4we21ZOa66vPngZaOdoyImcBMgOHDh08ZN25cjxrcsWMH++xT3lsZJdZdYs1QZt3W3DWrV6/emJlv2nV9o4P/NZmZEdHhnxuZeSNwI0Bra2suXbq0R+0sWrSIE088sUev7c9KrLvEmqHMuq25ayLi2T2tb/SvzBeqQzxUf65vcPuSVLxGB/89wIzq8xnAPza4fUkqXj1v57wDeAg4IiLaIuITwDeB/xQRTwHvrS5LkhqobmP8mXl2B5tOrlebkgaObdu20dbWxpYtW3bbtt9++7Fq1aom9Kp5Oqt52LBhjB07liFDhnTpWE17c1eSOtPW1sbIkSMZP348EfG6ba+88gojR45sUs+ao6OaM5NNmzbR1tbGhAkTunSssu6HktRvbNmyhQMPPHC30NfrRQQHHnjgHv8y6ojBL2mvZeh3TXf/nQx+SSqMwS9JHRgxYkSzu1AXBr8kFcbgl6QaMpMrrriCSZMmMXnyZObPnw/AunXrmDp1KscccwyTJk3i5z//Odu3b+e88857bd9vfetbTe797rydU9Je72/+1+M88dzLry1v376dQYMG9eqYRx4yiq9+6Kgu7Xv33XezYsUKHnnkETZu3Mhxxx3H1KlT+f73v88pp5zCF7/4RbZv384f/vAHVqxYwdq1a3nsscpXkbz44ou96mc9eMUvSTU8+OCDnH322QwaNIiWlhbe85738PDDD3Pcccdx6623cuWVV7Jy5UpGjhzJYYcdxtNPP83FF1/Mvffey6hRo5rd/d14xS9pr7frlfne8gGuqVOnsnjxYn784x9z3nnn8ZnPfIaPf/zjPPLII9x3333ccMMNLFiwgFtuuaXZXX0dr/glqYYTTjiB+fPns337djZs2MDixYt5xzvewbPPPktLSwsXXHABn/zkJ1m+fDkbN25kx44dnHnmmVx11VUsX7682d3fjVf8klTDhz/8YR566CGOPvpoIoJrrrmGMWPGcPvttzNnzhyGDBnCiBEj+O53v8vatWs5//zz2bFjBwBXX311k3u/O4NfkjqwefNmoPLJ2Dlz5jBnzpzXbZ8xYwYzZszY7XV741V+ew71SFJhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkvpIZ/P3P/PMM0yaNKmBvemYwS9JhfGTu5L2fv97Njy/8rXF4dtfhUG9jK8xk+ED3+x0l9mzZzNu3DguuugiAK688koGDx7MwoUL+d3vfse2bdu46qqrOP3007vV9JYtW7jwwgtZunQpgwcP5tprr2XatGk8/vjjnH/++WzdupUdO3Zw1113ccghh/DRj36UNWvWkJl8+ctfZvr06T0uGwx+SerQ9OnTufTSS18L/gULFnDfffdxySWXMGrUKDZu3Mjxxx/Paaed1q0vPL/uuuuICFauXMmTTz7J+973PlavXs0NN9zArFmzOOecc9i6dSvbt2/nJz/5CYcccgjz5s1j5MiRvPTSS72uy+CXtPfb5cr8jw2alvnYY49l/fr1PPfcc2zYsIHRo0czZswYLrvsMhYvXsw+++zD2rVreeGFFxgzZkyXj/vggw9y8cUXAzBx4kTe8pa3sHr1at75znfy9a9/nba2Ns444wwOP/xwJk+ezOWXX85XvvIVzjjjDE444YRe1+UYvyR14iMf+Qh33nkn8+fPZ/r06cydO5cNGzawbNkyVqxYQUtLC1u2bOmTtj72sY9xzz33MHz4cE499VQeeOAB3va2t7F8+XKOPPJIvvSlL/G1r32t1+14xS9JnZg+fToXXHABGzdu5Gc/+xkLFizgzW9+M0OGDGHhwoU8++yz3T7mCSecwNy5cznppJNYvXo1a9as4YgjjuDpp5/msMMO45JLLmHNmjU8+uij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\n"},"metadata":{"needs_background":"light"}}]}]}